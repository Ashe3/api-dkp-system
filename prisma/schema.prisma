generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  telegramId BigInt   @unique
  username   String
  dkp        Float    @default(0)
  bs         Int      @default(0)
  multiplier Float    @default(1.0)
  isBanned   Boolean  @default(false)
  createdAt  DateTime @default(now())
  claims     Claim[]
  actions    Action[] @relation("UserActions")
}

model Operator {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String // bcrypt hash
  role      String   @default("operator") // or 'admin'
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  actions   Action[] @relation("OperatorActions")
  events    Event[]
}

model Event {
  id          Int       @id @default(autoincrement())
  code        String?   @unique
  title       String
  reward      Int
  comment     String?
  createdAt   DateTime  @default(now())
  expiresAt   DateTime?
  createdBy   Operator? @relation(fields: [createdById], references: [id])
  createdById Int?
  claims      Claim[]
}

model Claim {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  amount    Float
  createdAt DateTime @default(now())

  @@unique([userId, eventId])
}

model Action {
  id         Int       @id @default(autoincrement())
  type       String
  metadata   String
  createdAt  DateTime  @default(now())
  operator   Operator? @relation("OperatorActions", fields: [operatorId], references: [id])
  operatorId Int?
  user       User?     @relation("UserActions", fields: [userId], references: [id])
  userId     Int?
}
